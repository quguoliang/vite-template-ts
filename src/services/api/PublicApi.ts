/**
 * 测试项目
 * unknown
 *
 * OpenAPI spec version: last
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import ajax, { AjaxPromise, ExtraFetchParams } from '@ajax';
import * as models from '../model/models';

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

/**
  * @description loginGet参数
  * @property `usename` 
  * @property `password` 
  */
export interface ParamsloginGet {
  // queryParams
  /**
   * 
   */
  usename: string;
  /**
   * 
   */
  password: string;
}

export class PublicApi {
  protected $basePath = '/api'.replace(/\/$/, '');

  public constructor(basePath?: string) {
    if (basePath !== undefined) {
      this.$basePath = basePath.replace(/\/$/, '');
    }
  }

  /**
   * 
   * @summary login
   * @param params ParamsloginGet
   
   * @param opt ajax config
   * @returns models.Login
   */
  public loginGet = (
    params: ParamsloginGet,
    opt?: ExtraFetchParams
  ): AjaxPromise<models.Login> => {
    const path = '/login';
    const url = this.$basePath + path;
    const p: any = {};
    p.query = {};
    if ('usename' in params) p.query.usename = params.usename;
    ajax.check(params.usename, 'usename');
    if ('password' in params) p.query.password = params.password;
    ajax.check(params.password, 'password');
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    });
  }
}

export default new PublicApi();